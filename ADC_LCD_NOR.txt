	.EQU	ADC_PORT=PORTA
	.EQU	ADC_DR=DDRA
	.EQU	ADC_IN=PINA
	.EQU LCD=PORTB
	.EQU LCD_DR=DDRB
	.EQU RS = 0
	.EQU RW = 1
	.EQU E = 2
	.EQU	TF=31249			;giá tr? ??t tr??c OCR1A/B t?o tr? 1s
	.EQU DATA = $100
	.ORG	0
	RJMP	MAIN
	.ORG	0X40
MAIN:	
	LDI		R16,HIGH(RAMEND);??a stack lên vùng ?/c cao
	OUT		SPH,R16
	LDI		R16,LOW(RAMEND)
	OUT		SPL,R16
	LDI		R16,0XFF			;PortD,B output
	;OUT		DDRD,R16		
	OUT		DDRB,R16

	LDI		R16,0X00			;PortA input
	OUT		ADC_DR,R16
	;OUT		PORTD,R16			;output=0x0000
	OUT		PORTB,R16
;------------------------------------------------
	CALL LCD_INIT
	CALL START_PORT
;---------------------------------------------------
; TEXT LCD

		LDI R16,1
		RCALL DELAY
		CBI LCD,0
		LDI R17,$01
		RCALL OUT_LCD
		LDI R16,20
		RCALL DELAY; XOA MAN HINH

		CBI LCD,RS
		LDI R17,$80
		RCALL OUT_LCD;CON TRO VE DONG 1 HANG 1

		LDI ZH,HIGH(TEXT<<1)
		LDI ZL,LOW(TEXT<<1)
DONG1:
		LPM R17,Z+
		CPI R17,$0D
		BREQ DOWN
		LDI R16,1
		RCALL DELAY
		SBI LCD,0
		RCALL OUT_LCD
		RJMP DONG1
DOWN:
;--------------------------------------

	
			
	LDI		R16,HIGH(TF)		
	STS		OCR1AH,R16
	STS		OCR1BH,R16
		
	LDI		R16,LOW(TF)		
	STS		OCR1AL,R16
	STS		OCR1BL,R16
					
	LDI		R16,0X00			;Timer1 mode CTC 4
	STS		TCCR1A,R16
	LDI		R16,0B00001100	;Timer1 mode CTC 4,N=256,ch?y Timer1
	STS		TCCR1B,R16

	
			
	LDI		R16,0B01000001	; Vref=AVcc=5V,SE ADC1,x1,d?ch ph?i
	STS		ADMUX,R16		;
	
	
	LDI		R16,0B10100110	;cho phép ADC,mode t? kích
	STS		ADCSRA,R16		;f(ADC)=fosc/64=125Khz

	

	LDI		R16,0X05		;ngu?n t?o kích OCF1B
	STS		ADCSRB,R16
LOOP_1:
	
	LDS		R16,ADCSRA		;??c c? ADIF
	SBRS		R16,ADIF		;c? ADIF=1 chuy?n ??i xong
	RJMP		LOOP_1		;ch? c? ADIF=1	

	;Xu ly sau khi ADC hoat dong xong

	STS		ADCSRA,R16		;xóa c? ADIF
	SBI		PINB,0


	;Hien thi gia tri len LCD: V1=x.xx volt
	;V1=ADCH:ADCL*Vref/1024
	RCALL DISPLAY_V
	CALL DISPLAY
	IN		R17,TIFR1			;??c c? OCF1A
	OUT		TIFR1,R17			;xóa c? OCF1A n?u =1
	RJMP	LOOP_1				;ti?p t?c chuy?n ??i

;-------------------------------------------------------------------;

DISPLAY:		PUSH R25
			LDI R25, 5
			LDI R16,1
			RCALL DELAY
			CBI LCD,0
			LDI R17,$C5 ; HANG 2 DONG 0
			RCALL OUT_LCD
			LDI XH, HIGH(DATA)
			LDI XL, LOW(DATA)
UP:			LD R17, X+
			LDI R16,1
			RCALL DELAY
			SBI LCD,0
			RCALL OUT_LCD
			DEC R25
			CPI R25,0
			BRNE UP
			
			LDI R16,1
			RCALL DELAY
			LDI R17,'V'
			LDI R16,1
			RCALL DELAY
			SBI LCD,RS
			RCALL OUT_LCD
			POP R25
			RET

;-------------
;Display
DISPLAY_V:
	LDI XH, HIGH(DATA)
	LDI XL, LOW(DATA)
;A*Vref = A*5
	LDS AL,ADCL
	LDS AH,ADCH
	LDI BL,LOW(5)       ;Load multiplier into BH:BL
    LDI BH,HIGH(5)      ;
	RCALL MUL16x16		;Ket qua: R21,R20
;V=x.----------------------------------------------------------------------------------------
	;A*5/1024
	;Ketqua: R0:gia tri dung, xuat ra LCD. R2,R3 so du.
	MOV AL,R20
	MOV AH,R21
	LDI BL,LOW(1024)       ;Load multiplier into BH:BL
    LDI BH,HIGH(1024)      ;
	RCALL DIV1616
	 
	;Xuat so x._
	MOV		R16,R0
	LDI		R17,0x30
	ADD		R17,R16
	ST X+, R17
		

	LDI		R17,46	;dau "."
	ST X+, R17

;V=x.x----------------------------------------------------------------------------------------
	;So du*10
	MOV AL,R2
	MOV AH,R3
	LDI BL,LOW(10)       ;Load multiplier into BH:BL
    LDI BH,HIGH(10)      ;
	RCALL MUL16x16		;Ket qua: R21,R20

	;So du*10/1024
	;Ketqua: R0:gia tri dung, xuat ra LCD. R2,R3 so du.
	MOV AL,R20
	MOV AH,R21
	LDI BL,LOW(1024)       ;Load multiplier into BH:BL
    LDI BH,HIGH(1024)      ;
	RCALL DIV1616

	;Xuat so _.x
	MOV		R16,R0
	LDI		R17,0x30
	ADD		R17,R16
	ST X+, R17

;V=x.xx----------------------------------------------------------------------------------------
	;So du*10
	MOV AL,R2
	MOV AH,R3
	LDI BL,LOW(10)       ;Load multiplier into BH:BL
    LDI BH,HIGH(10)      ;
	RCALL MUL16x16		;Ket qua: R21,R20

	;So du*10/1024
	;Ketqua: R0:gia tri dung, xuat ra LCD. R2,R3 so du.
	MOV AL,R20
	MOV AH,R21
	LDI BL,LOW(1024)       ;Load multiplier into BH:BL
    LDI BH,HIGH(1024)      ;
	RCALL DIV1616

	;Xuat so _._x
	MOV		R16,R0
	LDI		R17,0x30
	ADD		R17,R16
	ST X+, R17

;V=x.xxx----------------------------------------------------------------------------------------
	;So du*10
	MOV AL,R2
	MOV AH,R3
	LDI BL,LOW(10)       ;Load multiplier into BH:BL
    	LDI BH,HIGH(10)      ;
	RCALL MUL16x16		;Ket qua: R21,R20

	;So du*10/1024
	;Ketqua: R0:gia tri dung, xuat ra LCD. R2,R3 so du.
	MOV AL,R20
	MOV AH,R21
	LDI BL,LOW(1024)       ;Load multiplier into BH:BL
    	LDI BH,HIGH(1024)      ;
	RCALL DIV1616

	;Xuat gia tri _.__x
	MOV		R16,R0
	LDI		R17,0x30
	ADD		R17,R16
	ST X+, R17
RET

;-----------------------------------------------------------------------------
.DEF ZERO = R2               ;To hold Zero
/*.DEF   AL = R16              ;To hold multiplicand
.DEF   AH = R17
.DEF   BL = R18              ;To hold multiplier
.DEF   BH = R19*/
.DEF ANS1 = R20              ;To hold 32 bit answer
.DEF ANS2 = R21
.DEF ANS3 = R22
.DEF ANS4 = R23

        LDI AL,LOW(42)       ;Load multiplicand into AH:AL
        LDI AH,HIGH(42)      ;
        LDI BL,LOW(10)       ;Load multiplier into BH:BL
        LDI BH,HIGH(10)      ;

MUL16x16:
        CLR ZERO             ;Set R2 to zero
        MUL AH,BH            ;Multiply high bytes AHxBH
        MOVW ANS4:ANS3,R1:R0 ;Move two-byte result into answer

        MUL AL,BL            ;Multiply low bytes ALxBL
        MOVW ANS2:ANS1,R1:R0 ;Move two-byte result into answer

        MUL AH,BL            ;Multiply AHxBL
        ADD ANS2,R0          ;Add result to answer
        ADC ANS3,R1          ;
        ADC ANS4,ZERO        ;Add the Carry Bit

        MUL BH,AL            ;Multiply BHxAL
        ADD ANS2,R0          ;Add result to answer
        ADC ANS3,R1          ;
        ADC ANS4,ZERO        ;Add the Carry Bit
RET
;-----------------------------------------------------------------------------
.DEF ANSL = R0            ;To hold low-byte of answer
.DEF ANSH = R1            ;To hold high-byte of answer     
.DEF REML = R2            ;To hold low-byte of remainder
.DEF REMH = R3            ;To hold high-byte of remainder
.DEF   AL = R16           ;To hold low-byte of dividend
.DEF   AH = R17           ;To hold high-byte of dividend
.DEF   BL = R18           ;To hold low-byte of divisor
.DEF   BH = R19           ;To hold high-byte of divisor   
.DEF    C = R20           ;Bit Counter

        LDI AL,LOW(420)   ;Load low-byte of dividend into AL
        LDI AH,HIGH(420)  ;Load HIGH-byte of dividend into AH
        LDI BL,LOW(10)    ;Load low-byte of divisor into BL
        LDI BH,HIGH(10)   ;Load high-byte of divisor into BH
DIV1616:
        MOVW ANSH:ANSL,AH:AL ;Copy dividend into answer
        LDI C,17          ;Load bit counter
        SUB REML,REML     ;Clear Remainder and Carry
        CLR REMH          ;
LOOP:   ROL ANSL          ;Shift the answer to the left
        ROL ANSH          ;
        DEC C             ;Decrement Counter
         BREQ DONE        ;Exit if sixteen bits done
        ROL REML          ;Shift remainder to the left
        ROL REMH          ;
        SUB REML,BL       ;Try to subtract divisor from remainder
        SBC REMH,BH
         BRCC SKIP        ;If the result was negative then
        ADD REML,BL       ;reverse the subtraction to try again
        ADC REMH,BH       ;
        CLC               ;Clear Carry Flag so zero shifted into A 
         RJMP LOOP        ;Loop Back
SKIP:   SEC               ;Set Carry Flag to be shifted into A
         RJMP LOOP
DONE:RET


LCD_INIT:
		
;RESET VCC LCD:
		LDI R16,250
		RCALL DELAY
		LDI R16,250
		CBI LCD,0
		LDI R17,$30
		RCALL OUT_LCD
		LDI R16,42
		RCALL DELAY

		CBI LCD,0
		LDI R17,$30
		RCALL OUT_LCD
		LDI R16,2
		RCALL DELAY

		CBI LCD,0
		LDI R17,$32
		RCALL OUT_LCD
		
		LDI R17,$28
		RCALL INIT_LCD4
		LDI R17,$01
		RCALL INIT_LCD4
		LDI R17,$0C
		RCALL INIT_LCD4
		LDI R17,$06
		RCALL INIT_LCD4
		RET

START_PORT:
		;KHOI DONG PORT LCD
		LDI R16,$FF
		OUT LCD_DR,R16
		CBI LCD,0
		CBI LCD,1
		CBI LCD,2
		RET

INIT_LCD4:
		LDI R16,1
		RCALL DELAY
		CBI LCD,0
		RCALL OUT_LCD
		CPI R17,$01
		BREQ MORE
		LDI R16,1
		RCALL DELAY
MORE:		LDI R16,20
		RCALL DELAY
		RET

OUT_LCD:
		LDI R16,1
		RCALL DELAY
		IN R16,LCD
		ANDI R16,(1<<RS)
		PUSH R16
		PUSH R17
		ANDI R17,$F0
		OR R17,R16
		RCALL OUT_LCD4
		LDI R16,1
		RCALL DELAY
		POP R17
		POP R16
		SWAP R17
		ANDI R17,$F0
		OR R17,R16
		RCALL OUT_LCD4
		RET
OUT_LCD4:
		OUT LCD,R17
		SBI LCD,2
		CBI LCD,2
		RET
DELAY:
		MOV R15,R16
		LDI R16,200
L1:		MOV R14,R16
L2:		DEC R14
		NOP
		BRNE L2
		DEC R15
		BRNE L1
		RET
;-----------------------------------

TEXT: .DB "GIA TRI DIEN AP:",$0D
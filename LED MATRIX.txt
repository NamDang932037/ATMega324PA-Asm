.ORG 0X0000 ; INTERRUPT VECTOR TABLE
RJMP RESET_HANDLER ; RESET

.ORG 0X001A
RJMP TIMER1_COMP_ISR ;ngat co OCF
RESET_HANDLER:
    ; INITIALIZE STACK POINTER
    LDI R16, HIGH(RAMEND)
    OUT SPH, R16
    LDI R16, LOW(RAMEND)
    OUT SPL, R16
	CALL	SHIFTREGISTER_INITPORT
	CALL	SHIFTREGISTER_CLEARDATA
	CALL INITTIMER1CTC
    ; ENABLE GLOBAL INTERRUPTS
    SEI
	CALL	LEDMATRIX_PORTINIT
MAIN:
	JMP		MAIN

.EQU CLEARSIGNALPORT = PORTB   ; SET CLEAR SIGNAL PORT TO PORTB
.EQU CLEARSIGNALPIN = 3        ; SET CLEAR SIGNAL PIN TO PIN 3 OF PORTB
.EQU SHIFTCLOCKPORT = PORTB    ; SET SHIFT CLOCK PORT TO PORTB
.EQU SHIFTCLOCKPIN = 2         ; SET SHIFT CLOCK PIN TO PIN 2 OF PORTB
.EQU LATCHPORT = PORTB       ; SET LATCH PORT TO PORTB
.EQU LATCHPIN = 1              ; SET LATCH PIN TO PIN 1 OF PORTB
.EQU SHIFTDATAPORT = PORTB     ; SET SHIFT DATA PORT TO PORTB
.EQU SHIFTDATAPIN = 0          ; SET SHIFT DATA PIN TO PIN 0 OF PORTB

; INITIALIZE PORTS AS OUTPUTS
SHIFTREGISTER_INITPORT:
	PUSH	R24

	LDI		R24, (1<<CLEARSIGNALPIN)|(1<<SHIFTCLOCKPIN)|(1<<LATCHPIN)|(1<<SHIFTDATAPIN);
	OUT		DDRB, R24        ; SET DDRB TO OUTPUT
	POP		R24
	RET

SHIFTREGISTER_CLEARDATA:
	CBI CLEARSIGNALPORT, CLEARSIGNALPIN       ; SET CLEAR SIGNAL PIN TO LOW                              ; WAIT FOR A SHORT TIME
	SBI CLEARSIGNALPORT, CLEARSIGNALPIN       ; SET CLEAR SIGNAL PIN TO HIGH
	RET
; SHIFT OUT DATA
;SHIFT OUT R27 TO BAR LED
SHIFTREGISTER_SHIFTOUTDATA:
	PUSH	R18
	CBI SHIFTCLOCKPORT, SHIFTCLOCKPIN       ;
	LDI R18, 8               ; SHIFT 8 BITS
SHIFTLOOP:
	  SBRC R27, 7      ; CHECK IF THE MSB OF SHIFTDATA IS 1
	  SBI SHIFTDATAPORT, SHIFTDATAPIN   ; SET SHIFT DATA PIN TO HIGH
	  SBI SHIFTCLOCKPORT, SHIFTCLOCKPIN   ; SET SHIFT CLOCK PIN TO HIGH
	  LSL R27           ; SHIFT LEFT
	  CBI SHIFTCLOCKPORT, SHIFTCLOCKPIN   ; SET SHIFT CLOCK PIN TO LOW
	  CBI SHIFTDATAPORT, SHIFTDATAPIN   ; SET SHIFT DATA PIN TO LOW
	  DEC R18
	  BRNE SHIFTLOOP
; LATCH DATA
	SBI LATCHPORT, LATCHPIN   ; SET LATCH PIN TO HIGH
	CBI LATCHPORT, LATCHPIN   ; SET LATCH PIN TO LOW
	POP	R18
	RET

;LOOKUP TABLE FOR COLLUMN CONTROL
LEDMATRIX_COL_CONTROL: .DB	0X80, 0X40, 0X20, 0X10, 0X08, 0X04, 0X02, 0X01
; LOOKUP TABLE FOR FONT
//LEDMATRIX_FONT_A:	.DB		0B11111100, 0B00010010, 0B00010001, 0B00010001, 0B00010010, 0B11111100, 0B00000000, 0B00000000		
LEDMATRIX_FONT_A:	.DB		0b01100000, 0b11110000, 0b01101110, 0b00100111,0b01101110, 0b11110000, 0b01100000, 0b00000000 ;LOGO NHA CAI

;		J38 CONNECT TO PORTD


.EQU	LEDMATRIXPORT = PORTD       
.EQU	LEDMATRIXDIR =  DDRD
.DSEG
.ORG	SRAM_START			;STARTING ADDRESS IS 0X100
		LEDMATRIXBUFFER	:	.BYTE	8
		LEDMATRIXCOLINDEX	:	.BYTE	1
.CSEG
.ALIGN	2
LEDMATRIX_PORTINIT:
	PUSH	R20
	PUSH	R21
	LDI		R20, 0B11111111 ; SET PORT AS OUTPUT
	OUT		LEDMATRIXDIR, R20

	LDI		R20,0					;COL INDEX START AT 0
	LDI		R31,HIGH(LEDMATRIXCOLINDEX)
	LDI		R30,LOW(LEDMATRIXCOLINDEX)
	ST		Z,R20
	LDI		R20,0
	LDI		R31,HIGH(LEDMATRIX_FONT_A << 1)	;Z REGISTER POINT TO FONTA VALUE
	LDI		R30,LOW(LEDMATRIX_FONT_A << 1)
	LDI		R29,HIGH(LEDMATRIXBUFFER)	;   Y REGISTER POINT TO FONTA VALUE
	LDI		R28,LOW(LEDMATRIXBUFFER)
	LDI		R20,8
LEDMATRIX_PORTINIT_LOOP:				;COPY FONT TO DISPLAY BUFFER
	LPM		R21,Z+
	ST		Y+,R21
	DEC		R20
	CPI		R20,0
	BRNE	LEDMATRIX_PORTINIT_LOOP
	POP		R21
	POP		R20
	RET
; DISPLAY A COLLUMN OF LED MATRIX
; INPUT: R27 CONTAINS THE VALUE TO DISPLAY
;		R26 CONTAIN THE COL INDEX (3..0)
; OUTPUT: NONE
LEDMATRIX_DISPLAY_COL:
    PUSH R16 ; SAVE THE TEMPORARY REGISTER
	PUSH	R27
	CLR		R16
	OUT		LEDMATRIXPORT,R16
	CALL	SHIFTREGISTER_SHIFTOUTDATA
	
	LDI		R31,HIGH(LEDMATRIX_COL_CONTROL << 1)
	LDI		R30,LOW(LEDMATRIX_COL_CONTROL << 1)
	CLR		R16
	ADD		R30,R26
	ADC		R31,R16
	LPM		R27,Z
	OUT		LEDMATRIXPORT,R27
	POP		R27
    POP		R16 ; RESTORE THE TEMPORARY REGISTER
    RET ; RETURN FROM THE FUNCTION

INITTIMER1CTC:
	  PUSH	R16
	  LDI R16, HIGH(125)  ; LOAD THE HIGH  YTE INTO THE TEMPORARY REGISTER  (625:25HZ ;125: 125HZ) (64*125.10^-9*x*8 =1/f)
	  STS OCR1AH, R16       ; SET THE HIGH BYTE OF THE TIMER 1 COMPARE VALUE 
	  LDI R16, LOW(125)   ; LOAD THE LOW BYTE INTO THE TEMPORARY REGISTER
	  STS OCR1AL, R16       ; SET THE LOW BYTE OF THE TIMER 1 COMPARE VALUE 
	  LDI R16,  (1 << CS10)| (1<< WGM12)|(1 << CS11)  ; LOAD THE VALUE 0B00000101 INTO THE TEMPORARY REGISTER
	  STS TCCR1B, R16       ; 
	  LDI R16, (1 << OCIE1A); LOAD THE VALUE 0B00000010 INTO THE TEMPORARY REGISTER
	  STS TIMSK1, R16       ; ENABLE THE TIMER 1 COMPARE A INTERRUPT
	  POP	R16
	  RET

TIMER1_COMP_ISR:
	PUSH	R16
	PUSH	R26
	PUSH	R27
	LDI		R31,HIGH(LEDMATRIXCOLINDEX)
	LDI		R30,LOW(LEDMATRIXCOLINDEX)
	LD		R16,Z
	MOV		R26,R16
	LDI		R31,HIGH(LEDMATRIXBUFFER)
	LDI		R30,LOW(LEDMATRIXBUFFER)
	ADD		R30,R16
	CLR		R16
	ADC		R31,R16
	LD		R27,Z
	CALL	LEDMATRIX_DISPLAY_COL
	
	INC		R26
	CPI		R26,8
	BRNE	TIMER1_COMP_ISR_CONT
	LDI		R26,0	;IF R26 = 8, RESET TO 0
TIMER1_COMP_ISR_CONT:
	LDI		R31,HIGH(LEDMATRIXCOLINDEX)
	LDI		R30,LOW(LEDMATRIXCOLINDEX)
	ST		Z,R26

	POP		R27
	POP		R26
	POP		R16
	RETI
